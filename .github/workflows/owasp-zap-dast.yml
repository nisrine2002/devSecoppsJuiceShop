name: "OWASP ZAP DAST Scan"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  zap-scan:
    name: OWASP ZAP Dynamic Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm install
        echo "✅ Dependencies installed"

    - name: Start Juice Shop in background
      run: |
        echo "🚀 Starting Juice Shop..."
        npm start > juice-shop.log 2>&1 &
        echo $! > juice-shop.pid
        echo "⏳ Waiting 2 minutes for application to start..."
        sleep 120

    - name: Verify application is running
      run: |
        echo "🔍 Verifying application is accessible..."
        for i in {1..30}; do
          if curl -f http://localhost:3000 > /dev/null 2>&1; then
            echo "✅ Application is ready!"
            exit 0
          fi
          echo "⏳ Waiting... attempt $i/30"
          sleep 5
        done
        echo "❌ Application failed to start"
        cat juice-shop.log
        exit 1

    - name: Run ZAP Baseline Scan with Official Action
      uses: zaproxy/action-baseline@v0.12.0
      with:
        target: 'http://localhost:3000'
        allow_issue_writing: false
        fail_action: false

    - name: Pull ZAP Docker Image
      run: |
        echo "🐳 Pulling ZAP Docker image..."
        docker pull ghcr.io/zaproxy/zaproxy:stable

    - name: Generate XML Report from HTML
      continue-on-error: true
      run: |
        echo "🔄 Converting ZAP report to XML format..."
        # Use ZAP CLI to generate XML report
        docker run --network="host" -v $(pwd):/zap/wrk/:rw \
          ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py -t http://localhost:3000 \
          -x zap-report.xml \
          -r zap-report-full.html || echo "XML generation completed"

    - name: Check all generated reports
      if: always()
      run: |
        echo "📊 Listing all ZAP reports..."
        ls -lh report*.* zap-report.* 2>/dev/null || echo "Checking..."
        echo ""
        echo "Files in current directory:"
        ls -la | grep -E '\.(html|xml|json|md)$' || echo "No report files"

    - name: Upload ZAP HTML Report (from official action)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-html-report
        path: report_html.html
        if-no-files-found: warn

    - name: Upload ZAP JSON Report (from official action)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-json-report
        path: report_json.json
        if-no-files-found: warn

    - name: Upload ZAP XML Report (manually generated)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-xml-report
        path: zap-report.xml
        if-no-files-found: warn

    - name: Upload ZAP Full HTML Report (manually generated)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-html-report-full
        path: zap-report-full.html
        if-no-files-found: warn

    - name: Upload All ZAP Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-all-reports
        path: |
          report_html.html
          report_json.json
          report_md.md
          zap-report.xml
          zap-report-full.html
        if-no-files-found: warn

    - name: Upload application logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: application-logs
        path: juice-shop.log

    - name: Stop Juice Shop
      if: always()
      run: |
        echo "🛑 Stopping application..."
        if [ -f juice-shop.pid ]; then
          kill $(cat juice-shop.pid) || true
          rm juice-shop.pid
        fi
        pkill -f "npm start" || true
        pkill -f "node" || true